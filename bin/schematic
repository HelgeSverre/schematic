#!/usr/bin/env php
<?php
use craft\migrations\Install;
use pahanini\log\ConsoleTarget;
use yii\log\Dispatcher;
use NerdsAndCompany\Schematic\Schematic;
use NerdsAndCompany\Schematic\ConsoleCommands\ImportCommand;
use NerdsAndCompany\Schematic\ConsoleCommands\ExportCommand;

// Set path constants
define('CRAFT_BASE_PATH', getenv('CRAFT_BASE_PATH') ?: getcwd());
define('CRAFT_VENDOR_PATH', getenv('CRAFT_VENDOR_PATH') ?: CRAFT_BASE_PATH.'/vendor');
define('CRAFT_ENVIRONMENT', getenv('CRAFT_ENVIRONMENT') ?: 'production');

// Load Composer's autoloader
require_once CRAFT_VENDOR_PATH.'/autoload.php';

// Load and run Craft
$app = require_once CRAFT_VENDOR_PATH.'/craftcms/cms/bootstrap/console.php';

// Set console logger
$consoleTarget = new ConsoleTarget();
$consoleTarget->categories = ['schematic'];

if (Craft::getLogger()->dispatcher) {
    Craft::getLogger()->dispatcher->targets = [$consoleTarget];
} else {
    Craft::getLogger()->dispatcher = Craft::createObject([
        'class' => Dispatcher::class,
        'targets' => [$consoleTarget],
    ]);
}

// Add schematic controllers
$app->controllerMap = [
  'import' => ImportCommand::class,
  'export' => ExportCommand::class,
];

// Add schematic components
$components = [];
foreach (Schematic::DATA_TYPES as $dataType => $componentClass) {
    $components['schematic_'.$dataType] = [
        'class' => $componentClass,
    ];
}

$app->setComponents($components);
$app->init();

// Install Craft if needed
if (!$app->getIsInstalled()) {
    Schematic::info('Craft is not yet installed');
    exit(1);
}

$exitCode = $app->run();
exit($exitCode);
